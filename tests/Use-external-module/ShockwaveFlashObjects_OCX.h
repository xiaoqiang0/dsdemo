// ************************************************************************ //
// WARNING
// -------
// The types declared in this file were generated from data read from a
// Type Library. If this type library is explicitly or indirectly (via
// another type library referring to this type library) re-imported, or the
// 'Refresh' command of the Type Library Editor activated while editing the
// Type Library, the contents of this file will be regenerated and all
// manual modifications will be lost.
// ************************************************************************ //

// $Rev: 52393 $
// File generated on 2013/10/15 8:59:08 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Windows\System32\Macromed\Flash\Flash.ocx (1)
// LIBID: {D27CDB6B-AE6D-11CF-96B8-444553540000}
// LCID: 0
// Helpfile:
// HelpString: Shockwave Flash
// DepndLst:
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN32
// ************************************************************************ //
#ifndef   ShockwaveFlashObjects_OCXH
#define   ShockwaveFlashObjects_OCXH

#pragma option push -b -a4 -w-inl -w-8118

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <StdVCL.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "ShockwaveFlashObjects_TLB.h"
namespace Shockwaveflashobjects_tlb
{

// *********************************************************************//
// HelpString: Shockwave Flash
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TShockwaveFlash
// Help String      : Shockwave Flash
// Default Interface: IShockwaveFlash
// Def. Intf. Object: TCOMIShockwaveFlash
// Def. Intf. DISP? : No
// Event   Interface: _IShockwaveFlashEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.
// *********************************************************************//
typedef void __fastcall (__closure * TShockwaveFlashOnReadyStateChange)(System::TObject * Sender,
                                                                        long newState);
typedef void __fastcall (__closure * TShockwaveFlashOnProgress)(System::TObject * Sender,
                                                                long percentDone);
typedef void __fastcall (__closure * TShockwaveFlashFSCommand)(System::TObject * Sender,
                                                               BSTR command/*[in]*/,
                                                               BSTR args/*[in]*/);
typedef void __fastcall (__closure * TShockwaveFlashFlashCall)(System::TObject * Sender,
                                                               BSTR request/*[in]*/);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host Shockwave Flash in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TShockwaveFlash : public Vcl::Olectrls::TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TShockwaveFlashOnReadyStateChange FOnReadyStateChange;
  TShockwaveFlashOnProgress      FOnProgress;
  TShockwaveFlashFSCommand       FOnFSCommand;
  TShockwaveFlashFlashCall       FOnFlashCall;

  // Default Interace of OCX
  //
  TCOMIShockwaveFlash m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //
  LPUNKNOWN       __fastcall get_InlineData(void);
  void            __fastcall set_InlineData(LPUNKNOWN ppIUnknown/*[in]*/);

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[4];
  static Vcl::Olectrls::TControlData2 CControlData;
  static GUID          CTL_DEF_INTF;

  // Method providing access to interface as __property
  //
  TCOMIShockwaveFlash __fastcall GetDefaultInterface();
  TCOMIShockwaveFlash __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TShockwaveFlash(System::Classes::TComponent* AOwner) : Vcl::Olectrls::TOleControl(AOwner)
  {};
  virtual  __fastcall TShockwaveFlash(HWND        Parent) : Vcl::Olectrls::TOleControl(Parent)
  {};

  // OCX methods
  //
  void            __fastcall SetZoomRect(long left/*[in]*/, long top/*[in]*/, long right/*[in]*/,
                                         long bottom/*[in]*/);
  void            __fastcall Zoom(int factor/*[in]*/);
  void            __fastcall Pan(long x/*[in]*/, long y/*[in]*/, int mode/*[in]*/);
  void            __fastcall Play(void);
  void            __fastcall Stop(void);
  void            __fastcall Back(void);
  void            __fastcall Forward(void);
  void            __fastcall Rewind(void);
  void            __fastcall StopPlay(void);
  void            __fastcall GotoFrame(long FrameNum/*[in]*/);
  long            __fastcall CurrentFrame(void);
  VARIANT_BOOL    __fastcall IsPlaying(void);
  long            __fastcall PercentLoaded(void);
  VARIANT_BOOL    __fastcall FrameLoaded(long FrameNum/*[in]*/);
  long            __fastcall FlashVersion(void);
  void            __fastcall LoadMovie(int layer/*[in]*/, BSTR url/*[in]*/);
  void            __fastcall TGotoFrame(BSTR target/*[in]*/, long FrameNum/*[in]*/);
  void            __fastcall TGotoLabel(BSTR target/*[in]*/, BSTR label/*[in]*/);
  long            __fastcall TCurrentFrame(BSTR target/*[in]*/);
  BSTR            __fastcall TCurrentLabel(BSTR target/*[in]*/);
  void            __fastcall TPlay(BSTR target/*[in]*/);
  void            __fastcall TStopPlay(BSTR target/*[in]*/);
  void            __fastcall SetVariable(BSTR name/*[in]*/, BSTR value/*[in]*/);
  BSTR            __fastcall GetVariable(BSTR name/*[in]*/);
  void            __fastcall TSetProperty(BSTR target/*[in]*/, int property/*[in]*/,
                                          BSTR value/*[in]*/);
  BSTR            __fastcall TGetProperty(BSTR target/*[in]*/, int property/*[in]*/);
  void            __fastcall TCallFrame(BSTR target/*[in]*/, int FrameNum/*[in]*/);
  void            __fastcall TCallLabel(BSTR target/*[in]*/, BSTR label/*[in]*/);
  void            __fastcall TSetPropertyNum(BSTR target/*[in]*/, int property/*[in]*/,
                                             double value/*[in]*/);
  double          __fastcall TGetPropertyNum(BSTR target/*[in]*/, int property/*[in]*/);
  double          __fastcall TGetPropertyAsNumber(BSTR target/*[in]*/, int property/*[in]*/);
  void            __fastcall EnforceLocalSecurity(void);
  BSTR            __fastcall CallFunction(BSTR request/*[in]*/);
  void            __fastcall SetReturnValue(BSTR returnValue/*[in]*/);
  void            __fastcall DisableLocalSecurity(void);

  // OCX properties
  //
  __property int ReadyState={ read=GetIntegerProp, index=-525 };
  __property int TotalFrames={ read=GetIntegerProp, index=124 };
  __property _di_IUnknown InlineData={ read=GetIUnknownProp, write=SetIUnknownProp, index=191 };
  __property TCOMIShockwaveFlash ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property Visible;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //
  __property bool Playing={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=125 };
  __property int Quality={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=105 };
  __property int ScaleMode={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=120 };
  __property int AlignMode={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=121 };
  __property int BackgroundColor={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=123 };
  __property bool Loop={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=106 };
  __property System::WideString Movie={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=102 };
  __property int FrameNum={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=107 };
  __property System::WideString WMode={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=133 };
  __property System::WideString SAlign={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=134 };
  __property bool Menu={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=135 };
  __property System::WideString Base={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=136 };
  __property System::WideString Scale={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=137 };
  __property bool DeviceFont={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=138 };
  __property bool EmbedMovie={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=139 };
  __property System::WideString BGColor={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=140 };
  __property System::WideString Quality2={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=141 };
  __property System::WideString SWRemote={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=159 };
  __property System::WideString FlashVars={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=170 };
  __property System::WideString AllowScriptAccess={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=171 };
  __property System::WideString MovieData={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=190 };
  __property bool SeamlessTabbing={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=192 };
  __property bool Profile={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=194 };
  __property System::WideString ProfileAddress={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=195 };
  __property int ProfilePort={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=196 };
  __property System::WideString AllowNetworking={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=201 };
  __property System::WideString AllowFullScreen={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=202 };
  __property System::WideString AllowFullScreenInteractive={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=501 };
  __property bool IsDependent={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=502 };

  // OCX Events
  //
  __property TShockwaveFlashOnReadyStateChange OnReadyStateChange={ read=FOnReadyStateChange, write=FOnReadyStateChange };
  __property TShockwaveFlashOnProgress OnProgress={ read=FOnProgress, write=FOnProgress };
  __property TShockwaveFlashFSCommand OnFSCommand={ read=FOnFSCommand, write=FOnFSCommand };
  __property TShockwaveFlashFlashCall OnFlashCall={ read=FOnFlashCall, write=FOnFlashCall };
};
typedef TShockwaveFlash  TShockwaveFlashProxy;


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFlashObjectInterface
// Help String      : IFlashObjectInterface Interface
// Default Interface: IFlashObjectInterface
// Def. Intf. Object: IFlashObjectInterfacePtr
// Def. Intf. DISP? : No
// Event   Interface:
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TFlashObjectInterface : public Vcl::Oleserver::TOleServer
{
  IFlashObjectInterfacePtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFlashObjectInterface(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFlashObjectInterfacePtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFlashObjectInterfacePtr intf);


  void            __fastcall GetDispID(BSTR bstrName/*[in]*/, unsigned_long grfdex/*[in]*/,
                                       long* pid/*[out]*/);
  void            __fastcall RemoteInvokeEx(long id/*[in]*/, unsigned_long lcid/*[in]*/,
                                            unsigned_long dwFlags/*[in]*/, DISPPARAMS* pdp/*[in]*/,
                                            VARIANT* pvarRes/*[out]*/, EXCEPINFO* pei/*[out]*/,
                                            Shockwaveflashobjects_tlb::IServiceProvider* pspCaller/*[in]*/,
                                            unsigned cvarRefArg/*[in]*/, unsigned* rgiRefArg/*[in]*/,
                                            VARIANT* rgvarRefArg/*[in,out]*/);
  void            __fastcall DeleteMemberByName(BSTR bstrName/*[in]*/, unsigned_long grfdex/*[in]*/);
  void            __fastcall DeleteMemberByDispID(long id/*[in]*/);
  void            __fastcall GetMemberProperties(long id/*[in]*/, unsigned_long grfdexFetch/*[in]*/,
                                                 unsigned_long* pgrfdex/*[out]*/);
  void            __fastcall GetMemberName(long id/*[in]*/, BSTR* pbstrName/*[out]*/);
  void            __fastcall GetNextDispID(unsigned_long grfdex/*[in]*/, long id/*[in]*/,
                                           long* pid/*[out]*/);
  void            __fastcall GetNameSpaceParent(LPUNKNOWN* ppunk/*[out]*/);
};


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TFlashObject
// Help String      : FlashObject Class
// Default Interface: IFlashObject
// Def. Intf. Object: IFlashObjectPtr
// Def. Intf. DISP? : No
// Event   Interface:
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TFlashObject : public Vcl::Oleserver::TOleServer
{
  IFlashObjectPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TFlashObject(System::Classes::TComponent* owner) : Vcl::Oleserver::TOleServer(owner)
  {}

  IFlashObjectPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IFlashObjectPtr intf);


  void            __fastcall GetDispID(BSTR bstrName/*[in]*/, unsigned_long grfdex/*[in]*/,
                                       long* pid/*[out]*/);
  void            __fastcall RemoteInvokeEx(long id/*[in]*/, unsigned_long lcid/*[in]*/,
                                            unsigned_long dwFlags/*[in]*/, DISPPARAMS* pdp/*[in]*/,
                                            VARIANT* pvarRes/*[out]*/, EXCEPINFO* pei/*[out]*/,
                                            Shockwaveflashobjects_tlb::IServiceProvider* pspCaller/*[in]*/,
                                            unsigned cvarRefArg/*[in]*/, unsigned* rgiRefArg/*[in]*/,
                                            VARIANT* rgvarRefArg/*[in,out]*/);
  void            __fastcall DeleteMemberByName(BSTR bstrName/*[in]*/, unsigned_long grfdex/*[in]*/);
  void            __fastcall DeleteMemberByDispID(long id/*[in]*/);
  void            __fastcall GetMemberProperties(long id/*[in]*/, unsigned_long grfdexFetch/*[in]*/,
                                                 unsigned_long* pgrfdex/*[out]*/);
  void            __fastcall GetMemberName(long id/*[in]*/, BSTR* pbstrName/*[out]*/);
  void            __fastcall GetNextDispID(unsigned_long grfdex/*[in]*/, long id/*[in]*/,
                                           long* pid/*[out]*/);
  void            __fastcall GetNameSpaceParent(LPUNKNOWN* ppunk/*[out]*/);
};

};     // namespace Shockwaveflashobjects_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Shockwaveflashobjects_tlb;
#endif

#pragma option pop

#endif // ShockwaveFlashObjects_OCXH

